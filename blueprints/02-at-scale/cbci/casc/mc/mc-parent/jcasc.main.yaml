
beekeeper:
  enabled: true
  securityWarnings:
    enabledForCore: true
    enabledForPlugins: true
  upgrades:
    autoDowngradePlugins: false
    autoUpgradePlugins: true
appearance:
  consoleUrlProvider:
    providers:
    - "cloudbeesPipelineExplorer"
unclassified:
  audit-trail:
    displayUserName: false
    logBuildCause: true
    logCredentialsUsage: true
    loggers:
    - console:
        dateFormat: "yyyy-MM-dd HH:mm:ss:SSS"
        logPrefix: "[Audit]"
        output: STD_OUT
    pattern: ".*/(?:configSubmit|doDelete|postBuildResult|enable|disable|cancelQueue|stop|toggleLogKeep|doWipeOutWorkspace|createItem|createView|toggleOffline|cancelQuietDown|quietDown|restart|exit|safeExit)/?.*"
  timestamper:
    allPipelines: true
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
      - simpleBuildDiscarder:
          discarder:
            logRotator:
              numToKeepStr: "3"
  artifactManager:
    artifactManagerFactories:
    - jclouds:
        provider: "s3"
  workspaceCache:
    cacheManager: "s3"
  hibernationConfiguration:
    activities:
    - "build"
    - web:
        ignored: "/prometheus/|/metrics/.+|.+/api/.+|/managed-master-hibernation/verifyToken|.*/ajax.*|/login|/[$]stapler/bound/.+|.+/wfapi/.+|/sse-gateway/listen/.+|/tcpSlaveAgentListener/|.+/progressiveHtml|.+/log/"
    enabled: true
    gracePeriod: 3600
  openTelemetry:
    endpoint: ${ot_endpoint}
    observabilityBackends:
    - grafana:
        grafanaBaseUrl: ${sec_grafana_url}
        tempoDataSourceIdentifier: ${tempoDatasource}
        #Note: Not compatible with CPE
        #grafanaLogsBackend: "grafanaLogsBackendBackendWithLogMirroringInJenkins"
  cascItemsConfiguration:
    variableInterpolationEnabledForAdmin: true
aws:
  awsCredentials:
    region: "${sec_awsRegion}"
  s3:
    container: "${sec_s3bucketName}"
    disableSessionToken: false
    prefix: "${s3bucketPreffix}/"
    useHttp: false
    usePathStyleUrl: false
    useTransferAcceleration: false
cloudbees-pipeline-policies:
  config:
    policies:
    - action: "warning"
      customMessage: "Use retry and timeout as best practices for General Agents"
      name: "General - Agents"
      rules:
      - agentTimeoutRule:
          maxTime: 1
          maxUnit: "HOURS"
          properties: "1 HOURS"
      - "nodeWithoutRetryRule"